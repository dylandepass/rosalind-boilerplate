@import './mixins';

@define-mixin button-style $type, $state: default {
  color: var(--ros-component-button-color-$(type)-$(state)-foreground-color);
  background-color: var(--ros-component-button-color-$(type)-$(state)-background-color);
  border-width: var(--ros-component-button-border-width-$(type)-$(state));
  border-radius: var(--ros-component-button-border-radius-$(type));
  border-color: var(--ros-component-button-color-$(type)-$(state)-border-color);
}

@define-mixin button $type {
  @mixin button-style $type, default;

  &:hover {
    @mixin button-style $type, hover;
  }

  &:focus {
    @mixin button-style $type, default;
  }

  &:focus-visible {
    @mixin button-style $type, key-focus;
    border-width: var(--ros-component-button-border-width-$(type)-default);
    outline: var(--ros-component-button-border-width-$(type)-key-focus) solid var(--ros-component-button-color-$(type)-key-focus-border-color);
  }

  &:active {
    @mixin button-style $type, down;
  }

  &.disabled {
    @mixin button-style $type, disabled;

    &:focus,
    &:focus-visible {
      outline: initial;
    }
  }
}

.button-container {
  display: inline-block;
  margin-right: 10px;

  @media (--ros-screen-md) {
    display: inline-block;
    vertical-align: top;
  }
}

.button {
  &:not(:has(em)) {
    padding: var(--ros-component-button-spacing-padding-y) var(--ros-component-button-spacing-padding-x);
  }

  display: flex;
  justify-content: center;
  height: var(--ros-component-button-size-default-height);
  font-family: var(--ros-component-button-font-family-label);
  font-size: var(--ros-component-button-font-size-label);
  gap: var(--ros-component-button-spacing-gap);
  text-transform: var(--ros-component-button-text-case-label);
  line-height: 100%;
  font-weight: 700;
  border-style: solid;
  align-items: center;
  font-style: initial;
  user-select: none;
  transition-property: color, background-color, border-color, fill, stroke, opacity;
  transition-duration: 0.2s;
  outline: none;
}

.button em {
  display: flex;
  gap: var(--ros-component-button-spacing-gap);
  padding: var(--ros-component-button-spacing-padding-y) var(--ros-component-button-spacing-padding-x);
  align-items: center;
  font-style: normal;
}


/* TODO: Support small and large buttons */

/* .button.large {
	font-size: var(--ros-font-size-button-lg);
	padding: var(--ros-spacing-button-lg-vertical-padding) var(--ros-spacing-button-lg-horizontal-padding);
}

.button.small {
	font-size: var(--ros-font-size-button-sm);
	padding: var(--ros-spacing-button-sm-vertical-padding) var(--ros-spacing-button-sm-horizontal-padding);
} */

.button .icon,
.button .icon svg {
  @mixin icon sm;
}

.button.primary {
  @mixin button primary;
}

.button.secondary {
  @mixin button secondary;
}

.button.quiet {
  @mixin button quiet;
}

