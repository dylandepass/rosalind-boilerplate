@define-mixin form-element $type, $state {
	color: var(--ros-component-$(type)-color-$(state)-foreground-color);
	border-radius: var(--ros-component-$(type)-border-radius);
	border-color: var(--ros-component-$(type)-color-$(state)-border-color);
	background-color: var(--ros-component-$(type)-color-$(state)-background-color);
}

@define-mixin base-text-field $type {
	padding: var(--ros-component-$(type)-spacing-padding-y) var(--ros-component-$(type)-spacing-padding-x);
	font-family: var(--ros-component-$(type)-font-family-text);
	min-width: var(--ros-component-$(type)-min-width);
	font-size: var(--ros-component-$(type)-font-size-text);
	font-weight: var(--ros-component-$(type)-font-weight-text);
	text-decoration: var(--ros-component-$(type)-text-decoration-text);
	text-transform: var(--ros-component-$(type)-text-case-text);
	letter-spacing: var(--ros-component-$(type)-letter-spacing-text);
	border-style: solid;

	@mixin form-element $type, default;
	border-width: var(--ros-component-$(type)-border-width-default);

	&:hover {
		@mixin form-element $type, hover;
		border-width: var(--ros-component-$(type)-border-width-hover);
	}

	&:active {
		@mixin form-element $type, active;
	}

	&:focus {
		@mixin form-element $type, key-focus;
		outline: none;
		box-shadow: 0 0 0px var(--ros-component-$(type)-border-width-key-focus) var(--ros-component-$(type)-color-key-focus-border-color);
	}

	&:disabled {
		@mixin form-element disabled;
	}

	&::placeholder {
		color: var(--ros-component-text-field-color-placeholder);
	}
}

