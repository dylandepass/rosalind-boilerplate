{"version":3,"file":"stories-forms-select-stories.4086a7b0.iframe.bundle.js","mappings":";;;AAgBA;;AAEA;;;;;;;;;;;;;;;;AAgBA;;AAGA","sources":["webpack://@rosalind/rosalind-template/./docs/stories/forms/select.stories.js"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies, no-unused-vars */\n\nimport { within, userEvent } from '@storybook/testing-library';\nimport { expect } from '@storybook/jest';\nimport dedent from 'dedent';\nexport default {\n  title: 'Design System/Atoms/Forms/Select'\n};\nconst SelectExample = ({\n  label,\n  required,\n  disabled,\n  help\n}) => dedent /* html */`\n    <form>\n        <div class=\"group\">\n            <label for=\"car\">${label}</label>\n            <div class=\"select\">\n                <select id=\"car\" ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''}>\n                <option value=\"\" disabled selected hidden>Select car:</option>\n                <option value=\"1\">Audi</option>\n                <option value=\"2\">BMW</option>\n                <option value=\"3\">Citroen</option>\n                <option value=\"4\">Ford</option>\n                <option value=\"5\">Honda</option>\n                <option value=\"6\">Jaguar</option>\n                <option value=\"7\">Land Rover</option>\n                <option value=\"8\">Mercedes</option>\n                <option value=\"9\">Mini</option>\n                <option value=\"10\">Nissan</option>\n                <option value=\"11\">Toyota</option>\n                <option value=\"12\">Volvo</option>\n                </select>\n            </div>\n            <span>${help}</span>\n        </div>\n    </form>`;\nexport const Default = {\n  args: {\n    label: 'Favorite Car Manufacturer',\n    value: 'Airplane Mode',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: false\n  },\n  render: args => SelectExample(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Favorite Car Manufacturer')).toBeInTheDocument();\n    expect(canvas.getByText('Select car:')).toBeInTheDocument();\n    expect(canvas.getByText('BMW')).toBeInTheDocument();\n    expect(canvas.getByText('A clever desciption of this field')).toBeInTheDocument();\n  }\n};\nexport const Selected = {\n  args: {\n    label: 'Favorite Car Manufacturer',\n    value: 'Airplane Mode',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: false\n  },\n  render: args => SelectExample(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const select = document.querySelector('select');\n    await userEvent.selectOptions(select, 'BMW');\n    expect(select?.value).toEqual('2');\n  }\n};\nexport const Disabled = {\n  args: {\n    label: 'Favorite Car Manufacturer',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: true\n  },\n  render: args => SelectExample(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const select = document.querySelector('select');\n    await userEvent.selectOptions(select, 'BMW');\n    expect(select.value).toEqual('');\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Favorite Car Manufacturer',\\n    value: 'Airplane Mode',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: false\\n  },\\n  render: args => SelectExample(args),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    expect(canvas.getByText('Favorite Car Manufacturer')).toBeInTheDocument();\\n    expect(canvas.getByText('Select car:')).toBeInTheDocument();\\n    expect(canvas.getByText('BMW')).toBeInTheDocument();\\n    expect(canvas.getByText('A clever desciption of this field')).toBeInTheDocument();\\n  }\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nSelected.parameters = {\n  ...Selected.parameters,\n  docs: {\n    ...Selected.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Favorite Car Manufacturer',\\n    value: 'Airplane Mode',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: false\\n  },\\n  render: args => SelectExample(args),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    const select = document.querySelector('select');\\n    await userEvent.selectOptions(select, 'BMW');\\n    expect(select?.value).toEqual('2');\\n  }\\n}\",\n      ...Selected.parameters?.docs?.source\n    }\n  }\n};\nDisabled.parameters = {\n  ...Disabled.parameters,\n  docs: {\n    ...Disabled.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Favorite Car Manufacturer',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: true\\n  },\\n  render: args => SelectExample(args),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    const select = document.querySelector('select');\\n    await userEvent.selectOptions(select, 'BMW');\\n    expect(select.value).toEqual('');\\n  }\\n}\",\n      ...Disabled.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}