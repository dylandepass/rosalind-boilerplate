import{s as d}from"./index-d475d2ea.js";import{d as u}from"./index-356e4a49.js";import{S as p,e as f,a as c}from"./index-7fb38eb9.js";import"./_getTag-7cbcf524.js";import"./_commonjsHelpers-042e6b4d.js";import"./_baseToString-53b55ec4.js";const{simulatePageLoad:m,simulateDOMContentLoaded:l}=__STORYBOOK_MODULE_PREVIEW_API__;var{Node:y}=d,R=(r,e)=>{let{id:t,component:o}=e;if(typeof o=="string"){let s=o;return Object.keys(r).forEach(n=>{s=s.replace(`{{${n}}}`,r[n])}),s}if(o instanceof HTMLElement){let s=o.cloneNode(!0);return Object.keys(r).forEach(n=>{s.setAttribute(n,typeof r[n]=="string"?r[n]:JSON.stringify(r[n]))}),s}if(typeof o=="function")return o(r,e);throw console.warn(u`
    Storybook's HTML renderer only supports rendering DOM elements and strings.
    Received: ${o}
  `),new Error(`Unable to render story ${t}`)};function H({storyFn:r,kind:e,name:t,showMain:o,showError:s,forceRemount:n},i){let a=r();if(o(),typeof a=="string")i.innerHTML=a,m(i);else if(a instanceof y){if(i.firstChild===a&&n===!1)return;i.innerHTML="",i.appendChild(a),l()}else s({title:`Expecting an HTML snippet or DOM node from the story: "${t}" of "${e}".`,description:u`
        Did you forget to return the HTML snippet from the story?
        Use "() => <your snippet or node>" or when defining the story.
      `})}const{addons:_,useEffect:T}=__STORYBOOK_MODULE_PREVIEW_API__;function g(r){let e=r?.parameters.docs?.source,t=r?.parameters.__isArgsStory;return e?.type===p.DYNAMIC?!1:!t||e?.code||e?.type===p.CODE}function h(r){return u(r)}function E(r,e){return((e.parameters.docs??{}).transformSource??h)(r,e)}function O(r,e){let t=e?.parameters.docs?.source?.excludeDecorators?e.originalStoryFn(e.args,e):r(),o;return g(e)||(typeof t=="string"?o=t:t instanceof Element&&(o=t.outerHTML),o&&(o=E(o,e))),T(()=>{let{id:s,args:n}=e;o&&_.getChannel().emit(c,{id:s,args:n,source:o})}),t}var I=[O],S={docs:{story:{inline:!0},transformSource:void 0,source:{type:p.DYNAMIC,language:"html",code:void 0,excludeDecorators:void 0}}},N=[f],b={renderer:"html",...S};export{N as argTypesEnhancers,I as decorators,b as parameters,R as render,H as renderToCanvas};
//# sourceMappingURL=config-ff1a319b.js.map
