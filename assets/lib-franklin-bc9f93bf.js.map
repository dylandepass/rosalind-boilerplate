{"version":3,"file":"lib-franklin-bc9f93bf.js","sources":["../../scripts/lib-franklin.js"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * log RUM if part of the sample.\n * @param {string} checkpoint identifies the checkpoint in funnel\n * @param {Object} data additional data for RUM sample\n */\nexport function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      // eslint-disable-next-line object-curly-newline\n      window.hlx.rum = { weight, id, random, isSelected, sampleRUM };\n    }\n    const { weight, id } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.location.href, generation: window.hlx.RUM_GENERATION, checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n  } catch (error) {\n    // something went wrong\n  }\n}\n\n/**\n * Loads a CSS file.\n * @param {string} href The path to the CSS file\n */\nexport function loadCSS(href, callback) {\n  if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n    const link = document.createElement('link');\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('href', href);\n    if (typeof callback === 'function') {\n      link.onload = (e) => callback(e.type);\n      link.onerror = (e) => callback(e.type);\n    }\n    document.head.appendChild(link);\n  } else if (typeof callback === 'function') {\n    callback('noop');\n  }\n}\n\n/**\n * Retrieves the content of metadata tags.\n * @param {string} name The metadata name (or property)\n * @returns {string} The metadata value(s)\n */\nexport function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}\n\n/**\n * Sanitizes a name for use as class name.\n * @param {string} name The unsanitized name\n * @returns {string} The class name\n */\nexport function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-').replace(/-+/g, '-').replace(/^-|-$/g, '')\n    : '';\n}\n\n/*\n * Sanitizes a name for use as a js property name.\n * @param {string} name The unsanitized name\n * @returns {string} The camelCased name\n */\nexport function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}\n\n/**\n * Replace icons with inline SVG and prefix with codeBasePath.\n * @param {Element} element\n */\nexport function decorateIcons(element = document) {\n  element.querySelectorAll('span.icon').forEach(async (span) => {\n    if (span.classList.length < 2 || !span.classList[1].startsWith('icon-')) {\n      return;\n    }\n    const icon = span.classList[1].substring(5);\n    // eslint-disable-next-line no-use-before-define\n    const resp = await fetch(`${window.hlx.codeBasePath}/icons/${icon}.svg`);\n    if (resp.ok) {\n      const iconHTML = await resp.text();\n      if (iconHTML.match(/<style/i)) {\n        const img = document.createElement('img');\n        img.src = `data:image/svg+xml,${encodeURIComponent(iconHTML)}`;\n        span.appendChild(img);\n      } else {\n        span.innerHTML = iconHTML;\n      }\n    }\n  });\n}\n\n/**\n * Gets placeholders object\n * @param {string} prefix\n */\nexport async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      try {\n        fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n          .then((resp) => resp.json())\n          .then((json) => {\n            const placeholders = {};\n            json.data.forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n            window.placeholders[prefix] = placeholders;\n            resolve();\n          });\n      } catch (error) {\n        // error loading placeholders\n        window.placeholders[prefix] = {};\n        reject();\n      }\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return window.placeholders[prefix];\n}\n\n/**\n * Decorates a block.\n * @param {Element} block The block element\n */\nexport function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.setAttribute('data-block-name', shortBlockName);\n    block.setAttribute('data-block-status', 'initialized');\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}\n\n/**\n * Extracts the config from a block.\n * @param {Element} block The block element\n * @returns {object} The block config\n */\nexport function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope>div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}\n\n/**\n * Decorates all sections in a container element.\n * @param {Element} $main The container element\n */\nexport function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.setAttribute('data-section-status', 'initialized');\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}\n\n/**\n * Updates all section status in a container element.\n * @param {Element} main The container element\n */\nexport function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.getAttribute('data-section-status');\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.setAttribute('data-section-status', 'loading');\n        break;\n      } else {\n        section.setAttribute('data-section-status', 'loaded');\n      }\n    }\n  }\n}\n\n/**\n * Decorates all blocks in a container element.\n * @param {Element} main The container element\n */\nexport function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}\n\n/**\n * Builds a block DOM Element from a two dimensional array\n * @param {string} blockName name of the block\n * @param {any} content two dimensional array or string or object of content\n */\nexport function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}\n\n/**\n * Loads JS and CSS for a block.\n * @param {Element} block The block element\n */\nexport async function loadBlock(block, path = window.hlx.codeBasePath) {\n  const status = block.getAttribute('data-block-status');\n  if (status !== 'loading' && status !== 'loaded') {\n    block.setAttribute('data-block-status', 'loading');\n    const blockName = block.getAttribute('data-block-name');\n    try {\n      const cssLoaded = new Promise((resolve) => {\n        loadCSS(`${path}/blocks/${blockName}/${blockName}.css`, resolve);\n      });\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(`../blocks/${blockName}/${blockName}.js`);\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.setAttribute('data-block-status', 'loaded');\n  }\n}\n\n/**\n * Loads JS and CSS for all blocks in a container element.\n * @param {Element} main The container element\n */\nexport async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}\n\n/**\n * Returns a picture element with webp and fallbacks\n * @param {string} src The image URL\n * @param {boolean} eager load image eager\n * @param {Array} breakpoints breakpoints and corresponding params (eg. width)\n */\nexport function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 400px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}\n\n/**\n * Normalizes all headings within a container element.\n * @param {Element} el The container element\n * @param {[string]} allowedHeadings The list of allowed headings (h1 ... h6)\n */\nexport function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}\n\n/**\n * Set template (page structure) and theme (page styles).\n */\nexport function decorateTemplateAndTheme() {\n  const addClasses = (elem, classes) => {\n    classes.split(',').forEach((v) => {\n      elem.classList.add(toClassName(v.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}\n\n/**\n * decorates paragraphs containing a single link as buttons.\n * @param {Element} element container element\n */\n\nexport function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          a.className = 'button primary'; // default\n          up.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}\n\n/**\n * load LCP block and/or wait for LCP in default content.\n */\nexport async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.getAttribute('data-block-name')));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.querySelector('body').classList.add('appear');\n  const lcpCandidate = document.querySelector('main img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/**\n * loads a block named 'header' into header\n */\n\nexport function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}\n\n/**\n * loads a block named 'footer' into footer\n */\n\nexport function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}\n\n/**\n * init block utils\n */\n\nfunction init() {\n  window.hlx = window.hlx || {};\n  window.hlx.codeBasePath = '';\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}\n\ninit();\n"],"names":["sampleRUM","checkpoint","data","defer","fnname","args","dfnname","fn","chkpnt","weight","id","s","a","b","random","isSelected","sendPing","pdata","body","url","script","loadCSS","href","callback","link","e","getMetadata","name","attr","m","toClassName","toCamelCase","g","decorateIcons","element","span","icon","resp","iconHTML","img","decorateBlock","block","shortBlockName","section","readBlockConfig","config","row","cols","col","value","as","imgs","ps","p","decorateSections","main","wrappers","defaultContent","wrapper","sectionMeta","meta","key","style","updateSectionsStatus","sections","i","decorateBlocks","buildBlock","blockName","content","table","blockEl","rowEl","colEl","val","loadBlock","path","status","cssLoaded","resolve","decorationComplete","mod","__variableDynamicImportRuntimeHelper","error","loadBlocks","blocks","decorateTemplateAndTheme","addClasses","elem","classes","v","template","theme","waitForLCP","lcpBlocks","lcpCandidate","loadHeader","header","headerBlock","loadFooter","footer","footerBlock","init","scriptEl","event"],"mappings":"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"}