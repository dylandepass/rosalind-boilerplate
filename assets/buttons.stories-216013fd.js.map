{"version":3,"file":"buttons.stories-216013fd.js","sources":["../../docs/stories/components/buttons.stories.js"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies, no-unused-vars */\nimport { within, waitFor, userEvent } from '@storybook/testing-library';\nimport { expect } from '@storybook/jest';\nimport { FranklinTemplate } from '@dylandepass/franklin-storybook-addon';\nimport { decorateIcons } from '../../../scripts/lib-franklin.js';\nimport { loadPage } from '../../../scripts/scripts.js';\nfunction decorate(block) {\n  decorateIcons(block);\n  block.querySelector(':scope > div').classList.add('button-stories');\n  block.querySelectorAll('.button-container').forEach(button => {\n    const anchor = button.querySelector('a');\n    anchor.href = 'javascript:void(0)'; // eslint-disable-line no-script-url\n    if (anchor.textContent.includes('Disabled')) {\n      anchor.classList.add('disabled');\n    }\n    if (anchor.textContent.includes('Quiet')) {\n      anchor.classList.add('quiet');\n      anchor.classList.remove('primary');\n    }\n  });\n}\n\n/**\n * Default Config\n */\nexport default {\n  title: 'Design System/Atoms/Buttons',\n  parameters: {\n    docs: {\n      description: {\n        component: 'A block to display buttons'\n      }\n    }\n  }\n};\nexport const Buttons = {\n  parameters: {\n    path: '/storybook/buttons.plain.html',\n    selector: 'div',\n    index: 0\n  },\n  render: (args, context) => FranklinTemplate(loadPage, args, context, decorate),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await waitFor(() => {\n      expect(canvas.getByText('Buttons')).toBeInTheDocument();\n    });\n    const primary = canvas.getByTitle('Primary');\n    expect(primary).toBeInTheDocument();\n    async function testButtonByTitle(title) {\n      const btn = canvas.getByTitle(title);\n      expect(btn).toBeInTheDocument();\n      if (title.includes('Icon')) {\n        expect(btn.querySelector('.icon')).toBeInTheDocument();\n        await waitFor(() => {\n          expect(btn.querySelector('svg')).toBeInTheDocument();\n        });\n      }\n    }\n    testButtonByTitle('Primary');\n    testButtonByTitle('Primary Icon Left');\n    testButtonByTitle('Primary Icon Right');\n    testButtonByTitle('Secondary');\n    testButtonByTitle('Secondary Icon Left');\n    testButtonByTitle('Secondary Icon Right');\n    testButtonByTitle('Quiet');\n    testButtonByTitle('Quiet Icon Left');\n    testButtonByTitle('Quiet Icon Right');\n  }\n};\nButtons.parameters = {\n  ...Buttons.parameters,\n  docs: {\n    ...Buttons.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  parameters: {\\n    path: '/storybook/buttons.plain.html',\\n    selector: 'div',\\n    index: 0\\n  },\\n  render: (args, context) => FranklinTemplate(loadPage, args, context, decorate),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    await waitFor(() => {\\n      expect(canvas.getByText('Buttons')).toBeInTheDocument();\\n    });\\n    const primary = canvas.getByTitle('Primary');\\n    expect(primary).toBeInTheDocument();\\n    async function testButtonByTitle(title) {\\n      const btn = canvas.getByTitle(title);\\n      expect(btn).toBeInTheDocument();\\n      if (title.includes('Icon')) {\\n        expect(btn.querySelector('.icon')).toBeInTheDocument();\\n        await waitFor(() => {\\n          expect(btn.querySelector('svg')).toBeInTheDocument();\\n        });\\n      }\\n    }\\n    testButtonByTitle('Primary');\\n    testButtonByTitle('Primary Icon Left');\\n    testButtonByTitle('Primary Icon Right');\\n    testButtonByTitle('Secondary');\\n    testButtonByTitle('Secondary Icon Left');\\n    testButtonByTitle('Secondary Icon Right');\\n    testButtonByTitle('Quiet');\\n    testButtonByTitle('Quiet Icon Left');\\n    testButtonByTitle('Quiet Icon Right');\\n  }\\n}\",\n      ...Buttons.parameters?.docs?.source\n    }\n  }\n};"],"names":["decorate","block","decorateIcons","button","anchor","buttons_stories","Buttons","args","context","FranklinTemplate","loadPage","canvasElement","canvas","within","waitFor","expect","primary","testButtonByTitle","title","btn","__namedExportsOrder"],"mappings":"8aAMA,SAASA,EAASC,EAAO,CACvBC,EAAcD,CAAK,EACnBA,EAAM,cAAc,cAAc,EAAE,UAAU,IAAI,gBAAgB,EAClEA,EAAM,iBAAiB,mBAAmB,EAAE,QAAQE,GAAU,CAC5D,MAAMC,EAASD,EAAO,cAAc,GAAG,EACvCC,EAAO,KAAO,qBACVA,EAAO,YAAY,SAAS,UAAU,GACxCA,EAAO,UAAU,IAAI,UAAU,EAE7BA,EAAO,YAAY,SAAS,OAAO,IACrCA,EAAO,UAAU,IAAI,OAAO,EAC5BA,EAAO,UAAU,OAAO,SAAS,EAEvC,CAAG,CACH,CAKA,MAAeC,EAAA,CACb,MAAO,8BACP,WAAY,CACV,KAAM,CACJ,YAAa,CACX,UAAW,4BACZ,CACF,CACF,CACH,EACaC,EAAU,CACrB,WAAY,CACV,KAAM,gCACN,SAAU,MACV,MAAO,CACR,EACD,OAAQ,CAACC,EAAMC,IAAYC,EAAAA,iBAAiBC,EAAUH,EAAMC,EAASR,CAAQ,EAC7E,KAAM,MAAO,CACX,cAAAW,CACJ,IAAQ,CACJ,MAAMC,EAASC,EAAOF,CAAa,EACnC,MAAMG,EAAQ,IAAM,CAClBC,EAAOH,EAAO,UAAU,SAAS,CAAC,EAAE,kBAAiB,CAC3D,CAAK,EACD,MAAMI,EAAUJ,EAAO,WAAW,SAAS,EAC3CG,EAAOC,CAAO,EAAE,oBAChB,eAAeC,EAAkBC,EAAO,CACtC,MAAMC,EAAMP,EAAO,WAAWM,CAAK,EACnCH,EAAOI,CAAG,EAAE,oBACRD,EAAM,SAAS,MAAM,IACvBH,EAAOI,EAAI,cAAc,OAAO,CAAC,EAAE,kBAAiB,EACpD,MAAML,EAAQ,IAAM,CAClBC,EAAOI,EAAI,cAAc,KAAK,CAAC,EAAE,kBAAiB,CAC5D,CAAS,EAEJ,CACDF,EAAkB,SAAS,EAC3BA,EAAkB,mBAAmB,EACrCA,EAAkB,oBAAoB,EACtCA,EAAkB,WAAW,EAC7BA,EAAkB,qBAAqB,EACvCA,EAAkB,sBAAsB,EACxCA,EAAkB,OAAO,EACzBA,EAAkB,iBAAiB,EACnCA,EAAkB,kBAAkB,CACrC,CACH,EACAX,EAAQ,WAAa,CACnB,GAAGA,EAAQ,WACX,KAAM,CACJ,GAAGA,EAAQ,YAAY,KACvB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,GAAGA,EAAQ,YAAY,MAAM,MAC9B,CACF,CACH,EAAC,MAAAc,EAAA,CAAA,SAAA"}