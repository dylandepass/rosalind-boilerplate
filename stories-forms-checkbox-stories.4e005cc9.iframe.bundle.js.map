{"version":3,"file":"stories-forms-checkbox-stories.4e005cc9.iframe.bundle.js","mappings":";;;AAkBA;;AAEA;AACA;;AAEA;;AAGA","sources":["webpack://@rosalind/rosalind-template/./docs/stories/forms/checkbox.stories.js"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies, no-unused-vars */\n\nimport { within, userEvent } from '@storybook/testing-library';\nimport { expect } from '@storybook/jest';\nimport dedent from 'dedent';\nexport default {\n  title: 'Design System/Atoms/Forms/Checkbox'\n};\nconst CheckboxExample = ({\n  label,\n  required,\n  checked,\n  disabled,\n  help,\n  value\n}) => dedent /* html */`\n    <form>\n      <div class=\"group\">\n        <label for=\"terms\">${label}</label>\n        <div>\n          <input type=\"checkbox\" id=\"terms\" ${checked ? 'checked' : ''}  ${required ? 'required' : ''}  ${disabled ? 'disabled' : ''} onclick=\"(event) => event.target.checked = true\">\n          <label for=\"terms\">${value}</label>\n        </div>\n        <span>${help}</span>\n      </div>\n    </form>`;\nexport const Default = {\n  args: {\n    label: 'Agree to Terms',\n    value: 'Completed Task',\n    help: 'A clever desciption of this field',\n    checked: false,\n    required: false,\n    disabled: false\n  },\n  render: args => CheckboxExample(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Completed Task')).toBeInTheDocument();\n    expect(canvas.getByText('Agree to Terms')).toBeInTheDocument();\n    expect(canvas.getByText('A clever desciption of this field')).toBeInTheDocument();\n  }\n};\nexport const Selected = {\n  args: {\n    label: 'Agree to Terms',\n    value: 'Completed Task',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: false\n  },\n  render: args => CheckboxExample(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const checkbox = document.querySelector('#terms');\n    await userEvent.click(checkbox);\n    expect(checkbox.checked).toEqual(true);\n  }\n};\nexport const Disabled = {\n  args: {\n    label: 'Agree to Terms',\n    value: 'Completed Task',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: true\n  },\n  render: args => CheckboxExample(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const checkbox = document.querySelector('#terms');\n    await userEvent.click(checkbox);\n    expect(checkbox.checked).toEqual(false);\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Agree to Terms',\\n    value: 'Completed Task',\\n    help: 'A clever desciption of this field',\\n    checked: false,\\n    required: false,\\n    disabled: false\\n  },\\n  render: args => CheckboxExample(args),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    expect(canvas.getByText('Completed Task')).toBeInTheDocument();\\n    expect(canvas.getByText('Agree to Terms')).toBeInTheDocument();\\n    expect(canvas.getByText('A clever desciption of this field')).toBeInTheDocument();\\n  }\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nSelected.parameters = {\n  ...Selected.parameters,\n  docs: {\n    ...Selected.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Agree to Terms',\\n    value: 'Completed Task',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: false\\n  },\\n  render: args => CheckboxExample(args),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const checkbox = document.querySelector('#terms');\\n    await userEvent.click(checkbox);\\n    expect(checkbox.checked).toEqual(true);\\n  }\\n}\",\n      ...Selected.parameters?.docs?.source\n    }\n  }\n};\nDisabled.parameters = {\n  ...Disabled.parameters,\n  docs: {\n    ...Disabled.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Agree to Terms',\\n    value: 'Completed Task',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: true\\n  },\\n  render: args => CheckboxExample(args),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const checkbox = document.querySelector('#terms');\\n    await userEvent.click(checkbox);\\n    expect(checkbox.checked).toEqual(false);\\n  }\\n}\",\n      ...Disabled.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}