@define-mixin form-element $type, $state {
  color: var(--ros-component-$(type)-color-$(state)-foreground-color);
  border-radius: var(--ros-component-$(type)-border-radius);
  border-color: var(--ros-component-$(type)-color-$(state)-border-color);
  background-color: var(--ros-component-$(type)-color-$(state)-background-color);
}

@define-mixin base-text-field $type {
  padding: var(--ros-component-$(type)-spacing-padding-y) var(--ros-component-$(type)-spacing-padding-x);
  font-family: var(--ros-component-$(type)-font-family-text);
  min-width: var(--ros-component-$(type)-min-width);
  font-size: var(--ros-component-$(type)-font-size-text);
  font-weight: var(--ros-component-$(type)-font-weight-text);
  text-decoration: var(--ros-component-$(type)-text-decoration-text);
  text-transform: var(--ros-component-$(type)-text-case-text);
  letter-spacing: var(--ros-component-$(type)-letter-spacing-text);
  border-style: solid;

  @mixin form-element $type, default;

  border-width: var(--ros-component-$(type)-border-width-default);

  &:hover {
    @mixin form-element $type, hover;

    border-width: var(--ros-component-$(type)-border-width-hover);
  }

  &:focus {
    @mixin form-element $type, key-focus;

    outline: none;
    box-shadow: 0 0 0 var(--ros-component-$(type)-border-width-key-focus) var(--ros-component-$(type)-color-key-focus-border-color);
  }

  &:disabled {
    @mixin form-element $type, disabled;

    &::placeholder {
      color: var(--ros-component-text-field-color-disabled-foreground-color);
    }
  }

  &::placeholder {
    color: var(--ros-component-text-field-color-placeholder);
    font-family: var(--ros-component-text-field-font-family-placeholder);
    line-height: var(--ros-component-text-field-line-height-placeholder);
    font-size: var(--ros-component-text-field-font-size-placeholder);
    font-weight: var(--ros-component-text-field-font-weight-placeholder);
    text-transform: var(--ros-component-text-field-text-case-placeholder);
    letter-spacing: var(--ros-component-text-field-letter-spacing-placeholder);
    text-decoration: var(--ros-component-text-field-text-decoration-placeholder);
  }

  &:optional {
    @mixin form-element $type, default;
  }

  &:optional:disabled {
    @mixin form-element $type, disabled;

    &::placeholder {
      color: var(--ros-component-text-field-color-disabled-foreground-color);
    }
  }

  &:required:focus:valid {
    @mixin form-element $type, success;		

    box-shadow: 0 0 0 var(--ros-component-$(type)-border-width-key-focus) var(--ros-component-$(type)-color-success-border-color);
  }

  &:focus:invalid {
    @mixin form-element $type, error;

    box-shadow: 0 0 0 var(--ros-component-$(type)-border-width-key-focus) var(--ros-component-$(type)-color-error-border-color);
  }
}

@custom-selector :--check-element-background + label::before;
@custom-selector :--check-element-label + label;

@define-mixin base-checked-element $type {
  opacity: 0;
  appearance: none;
  outline: none;
  display: inline-block;
  position: relative;
  cursor: pointer;

  & :--check-element-background {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    background-color: var(--ros-component-$(type)-color-default-background-color);
    border-width: var(--ros-component-$(type)-border-width-default);
    border-color: var(--ros-component-$(type)-color-default-border-color);
    border-radius: var(--ros-component-$(type)-border-radius);
    border-style: solid;
  }

  & :--check-element-label {
    position: relative;
    cursor: pointer;
    display: inline-block;
    user-select: none;
    font-family: var(--ros-component-$(type)-font-family-label);
    font-size: var(--ros-component-$(type)-font-size-label);
    font-weight: var(--ros-component-$(type)-font-weight-label);
    letter-spacing: var(--ros-component-$(type)-letter-spacing-label);
    text-decoration: var(--ros-component-$(type)-text-decoration-label);
    text-transform: var(--ros-component-$(type)-text-case-label);
    color: var(--ros-component-$(type)-color-default-foreground-color);
    line-height: var(--ros-component-$(type)-line-height-label);
    padding-left: var(--ros-component-$(type)-spacing-space-between);
  }

  &:hover {
    & :--check-element-background {
      border-style: solid;
      border-width: var(--ros-component-$(type)-border-width-hover);
      border-color: var(--ros-component-$(type)-color-hover-border-color);
      background-color: var(--ros-component-$(type)-color-hover-background-color);
    }
    
    & :--check-element-label {
      color: var(--ros-component-$(type)-color-hover-foreground-color);
    }
  }

  /* Background focus-visible */
  &:focus-visible {
    & :--check-element-background {
      outline:
        var(--ros-component-$(type)-border-width-key-focus)
        solid
        var(--ros-component-$(type)-color-key-focus-border-color);
      border-color: rgb(0 0 0 / 0%);
      background-color: var(--ros-component-$(type)-color-key-focus-background-color);
    }

    & :--check-element-label {
      color: var(--ros-component-$(type)-color-key-focus-foreground-color);
    }
  }

  &:disabled {
    & :--check-element-background {
      position: absolute;
      left: 0;
      top: 0;
      background-color: var(--ros-component-$(type)-color-disabled-background-color);
      border-width: var(--ros-component-$(type)-border-width-disabled);
      border-color: var(--ros-component-$(type)-color-disabled-border-color);
    }

    & :--check-element-label {
      color: var(--ros-component-$(type)-color-disabled-foreground-color);
    }
  }
}