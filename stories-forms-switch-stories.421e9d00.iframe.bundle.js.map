{"version":3,"file":"stories-forms-switch-stories.421e9d00.iframe.bundle.js","mappings":";;;AAkBA;;AAEA;AACA;;AAEA;;AAGA","sources":["webpack://@rosalind/rosalind-template/./docs/stories/forms/switch.stories.js"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies, no-unused-vars */\n\nimport { within, userEvent } from '@storybook/testing-library';\nimport { expect } from '@storybook/jest';\nimport dedent from 'dedent';\nexport default {\n  title: 'Design System/Atoms/Forms/Switch'\n};\nconst SwitchExample = ({\n  label,\n  required,\n  checked,\n  disabled,\n  help,\n  value\n}) => dedent /* html */`\n    <form>\n      <div class=\"group\">\n        <label for=\"wifi\">${label}</label>\n        <div>\n          <input type=\"checkbox\" id=\"wifi\" class=\"switch\" ${checked ? 'checked' : ''} ${required ? 'required' : ''} ${disabled ? 'disabled' : ''}>\n          <label for=\"wifi\">${value}</label>\n        </div>\n        <span>${help}</span>\n      </div>\n    </form>`;\nexport const Default = {\n  args: {\n    label: 'Wifi Settings',\n    value: 'Airplane Mode',\n    help: 'A clever desciption of this field',\n    checked: false,\n    required: false,\n    disabled: false\n  },\n  render: args => SwitchExample(args)\n};\nexport const Selected = {\n  args: {\n    label: 'Wifi Settings',\n    value: 'Airplane Mode',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: false\n  },\n  render: args => SwitchExample(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const switchElement = document.querySelector('#wifi');\n    await userEvent.click(switchElement);\n    expect(switchElement.checked).toEqual(true);\n  }\n};\nexport const Disabled = {\n  args: {\n    label: 'Wifi Settings',\n    value: 'Airplane Mode',\n    help: 'A clever desciption of this field',\n    required: false,\n    disabled: true\n  },\n  render: args => SwitchExample(args),\n  play: async ({\n    canvasElement\n  }) => {\n    const switchElement = document.querySelector('#wifi');\n    await userEvent.click(switchElement);\n    expect(switchElement.checked).toEqual(false);\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Wifi Settings',\\n    value: 'Airplane Mode',\\n    help: 'A clever desciption of this field',\\n    checked: false,\\n    required: false,\\n    disabled: false\\n  },\\n  render: args => SwitchExample(args)\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};\nSelected.parameters = {\n  ...Selected.parameters,\n  docs: {\n    ...Selected.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Wifi Settings',\\n    value: 'Airplane Mode',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: false\\n  },\\n  render: args => SwitchExample(args),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const switchElement = document.querySelector('#wifi');\\n    await userEvent.click(switchElement);\\n    expect(switchElement.checked).toEqual(true);\\n  }\\n}\",\n      ...Selected.parameters?.docs?.source\n    }\n  }\n};\nDisabled.parameters = {\n  ...Disabled.parameters,\n  docs: {\n    ...Disabled.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    label: 'Wifi Settings',\\n    value: 'Airplane Mode',\\n    help: 'A clever desciption of this field',\\n    required: false,\\n    disabled: true\\n  },\\n  render: args => SwitchExample(args),\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const switchElement = document.querySelector('#wifi');\\n    await userEvent.click(switchElement);\\n    expect(switchElement.checked).toEqual(false);\\n  }\\n}\",\n      ...Disabled.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}